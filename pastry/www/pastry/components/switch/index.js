console.log("def:component_switch"),define(["js/core","~/plugins/bootstrap-switch/bootstrap-switch","css!~/plugins/bootstrap-switch/bootstrap-switch.css"],function(t){var s,e;return e=t.api,s=t.Component,s.Switch=s.Base.extend({initialize:function(t){var s,i,o,n;return this._super.apply(this,arguments),i=this.model,i.mapping.value=e.getTypeVal("String",i.mapping.name,"value"),o=this,s={onText:this.$el.data("on-text"),offText:this.$el.data("off-text"),onSwitchChange:function(t,s){o.onSwitch({isSelected:s,srcEvt:t})?i.setValue(s,{silent:!0}):setTimeout(function(){s=!s,i.setValue(s,{silent:!0}),o["switch"].bootstrapSwitch("state",s,!0)},200)}},this["switch"]=this.$el.bootstrapSwitch(s),n=o["switch"].bootstrapSwitch("state"),_.isUndefined(i.getValue())&&i.setValue(n,{silent:!0}),"absolute"!==this.$el.css("position")&&this.$el.css("position","absolute"),this.$el.closest(".bootstrap-switch").css("width",this.$el.width()+"px")},doRender:function(){return this["switch"].bootstrapSwitch("state",this.model.getValue()),!0},toggle:function(){this.setValue(!this.getValue())},onSwitch:function(t){return!0}})});